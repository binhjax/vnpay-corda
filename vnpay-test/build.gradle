buildscript {
    ext {
//        corda_release_group = 'net.corda'
        corda_release_group = 'com.r3.corda'
        corda_release_version = '3.2'
        corda_gradle_plugins_version = '3.0.9'
        kotlin_version = '1.3.20'
        kotlinx_version = '1.1.1'
        junit_version = '4.12'
        quasar_version = '0.7.9'
        spring_boot_version = '2.0.2.RELEASE'
        spring_boot_gradle_plugin_version = '2.0.2.RELEASE'
        slf4j_version = '1.7.25'
        log4j_version = '2.9.1'
        typesafe_config_version='1.3.1'
    }

    repositories {
        flatDir {
            dirs 'lib'
        }
        mavenLocal()
        mavenCentral()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
        maven { url 'https://jitpack.io' }

        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"

        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:publish-utils:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:0.7"


        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_gradle_plugin_version"
        classpath "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_version"
        classpath "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:$kotlinx_version"
        classpath 'io.github.microutils:kotlin-logging:1.6.22'
        classpath "eu.appsatori:gradle-fatjar-plugin:0.3"

        classpath  "org.jfrog.buildinfo:build-info-extractor-gradle:4.9.1"
        classpath("com.github.jengelman.gradle.plugins:shadow:4.0.4")

    }
}


apply plugin: 'kotlin'
// Java Persistence API support: create no-arg constructor
// see: http://stackoverflow.com/questions/32038177/kotlin-with-jpa-default-constructor-hell
apply plugin: 'kotlin-jpa'
//apply plugin: CanonicalizerPlugin
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'com.github.johnrengelman.shadow'

description 'Corda finance modules'

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
    }
}

repositories {
    flatDir {
        dirs 'libs/'
    }
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
    maven { url 'https://jitpack.io' }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"


    // Note the :finance module is a CorDapp in its own right
    // and CorDapps using :finance features should use 'cordapp' not 'compile' linkage.
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-confidential-identities:$corda_release_version"
//
//    cordaCompile project(':core')
//    cordaCompile project(':confidential-identities')

    // TODO Remove this once we have app configs
    compile "com.typesafe:config:$typesafe_config_version"

//    testCompile project(':test-utils')
//    testCompile project(path: ':core', configuration: 'testArtifacts')
//    testCompile "junit:junit:$junit_version"
//
//    // AssertJ: for fluent assertions for testing
//    testCompile "org.assertj:assertj-core:$assertj_version"
}

configurations {
    testArtifacts.extendsFrom testRuntime
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task testJar(type: Jar) {
    classifier "tests"
    from sourceSets.test.output
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

artifacts {
    testArtifacts testJar
}

shadowJar {
    zip64 true
    baseName 'corda-finance'
}
jar {
    baseName 'corda-finance'
//    from {
//        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//    }
}

publish {
    name jar.baseName
}
