apply plugin: 'kotlin'
// Java Persistence API support: create no-arg constructor
// see: http://stackoverflow.com/questions/32038177/kotlin-with-jpa-default-constructor-hell
apply plugin: 'kotlin-jpa'
//apply plugin: CanonicalizerPlugin
apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'com.jfrog.artifactory'

description 'Corda finance modules'

/**
 * NOTE: this build.gradle file is maintained for backwards compatibility purposes.
 *       It will build a `corda-finance.jar` including all Contracts and Flows.
 *       From Corda 4 it is strongly recommended that CorDapps dependent on the `corda-finance.jar`
 *       explicitly declare dependencies on either/both of the corda finance sub-modules:
 *          corda-finance-contract  => generates `corda-finance-contract.jar`
 *          corda-finance-workflows => generates `corda-finance-workflows.jar`
 *       Third party CorDapps should remember to include these sub-module dependencies using the `cordapp` Corda Gradle plug-in
 *          cordapp project(':finance:workflows')
 *          cordapp project(':finance:contracts')
 */

def mainProjects = [':finance:contracts',':finance:workflows', ':confidential-identities']

jar.dependsOn mainProjects.collect{ it+":compileJava"}
jar {
    baseName 'corda-finance'
    from files(mainProjects.collect{ project(it).sourceSets.main.output })
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

cordapp {
    signing {
        enabled false
    }
    targetPlatformVersion corda_platform_version.toInteger()
    minimumPlatformVersion 1
    contract {
        name "Corda Finance Demo"
        versionId 1
        vendor "R3"
        licence "Open Source (Apache 2)"
    }
    workflow {
        name "Corda Finance Demo"
        versionId 1
        vendor "R3"
        licence "Open Source (Apache 2)"
    }
}

publish {
    name jar.baseName
}
