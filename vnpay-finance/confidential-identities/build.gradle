// Experimental Confidential Identities support for 1.0
// This contains the prototype SwapIdentitiesFlow and SwapIdentitiesHandler, which can be used
// for exchanging confidential identities as part of a flow, until a permanent solution is prepared.
// Expect this module to be removed and merged into core in a later release.
apply plugin: 'kotlin'
//apply plugin: CanonicalizerPlugin
//apply plugin: 'net.corda.plugins.publish-utils'
apply plugin: 'net.corda.plugins.quasar-utils'
//apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'com.jfrog.artifactory'

description 'Corda Experimental Confidential Identities'

repositories {
    flatDir {
        dirs '../libs'
    }
}

dependencies {
//    cordaCompile project(':core')
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile name: 'vnpay-corda-core'

    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j_version}"

//    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
//    testCompile "junit:junit:$junit_version"

    // Guava: Google test library (collections test suite)
//    testCompile "com.google.guava:guava-testlib:$guava_version"

    // Bring in the MockNode infrastructure for writing protocol unit tests.
//    testCompile project(":node-driver")

    // AssertJ: for fluent assertions for testing
//    testCompile "org.assertj:assertj-core:$assertj_version"
}
//
//cordapp {
//    targetPlatformVersion corda_platform_version.toInteger()
//    minimumPlatformVersion 1
//    workflow {
//        name "Corda Experimental Confidential Identities"
//        versionId 1
//        vendor "R3"
//        licence "Open Source (Apache 2)"
//    }
//}

jar {
    baseName 'corda-confidential-identities'
}

publish {
    name jar.baseName
}
